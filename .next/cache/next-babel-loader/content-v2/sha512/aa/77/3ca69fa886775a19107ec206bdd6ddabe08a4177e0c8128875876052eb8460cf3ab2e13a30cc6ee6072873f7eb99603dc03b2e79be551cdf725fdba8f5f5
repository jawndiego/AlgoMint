{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathanreis/Projects/BareGenerator/components/models.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport * as THREE from 'three';\nimport { centerObjects, leftObjects, mirrorObjects, rightObjects } from './rawModels';\nimport React, { Suspense, useState, useRef } from 'react';\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber';\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei';\n/**\n * 1. Choose a random object from the input objects\n * 2. Hydrate the object with scene, nodes, and materials via useGLFT\n * 3. Return the plain object combined with the hydrated fields\n */\n\nvar chooseAndHydrateObject = function chooseAndHydrateObject(objects) {\n  _s();\n\n  var randomIndex = Math.floor(Math.random() * objects.length);\n  var randomObject = objects[randomIndex];\n  var materialName = randomObject.materialName,\n      pathname = randomObject.pathname,\n      position = randomObject.position,\n      rotation = randomObject.rotation,\n      scale = randomObject.scale;\n\n  var _useGLTF = useGLTF(\"./about-pictures/\".concat(pathname, \".glb\")),\n      scene = _useGLTF.scene,\n      nodes = _useGLTF.nodes,\n      materials = _useGLTF.materials;\n\n  var material = materials[materialName];\n  var geometry = nodes[pathname].geometry;\n  console.log(pathname);\n  return {\n    geometry: geometry,\n    material: material,\n    position: position,\n    rotation: rotation,\n    scale: scale,\n    scene: scene\n  };\n};\n\n_s(chooseAndHydrateObject, \"lpijlwXSujHsoam38jtKc/YBHH0=\", false, function () {\n  return [useGLTF];\n});\n\nexport function ObjectListMirror(_ref) {\n  _s2();\n\n  var randomObject = _ref.randomObject;\n  var group = useRef();\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 12) / 5;\n    group.current.rotation.x = Math.cos(t) / 9;\n    group.current.rotation.y = Math.sin(t / 12) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  }); // console.log('renderMirror');\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ObjectListMirror, \"wIQ0TzBcBbrr+qLtNjBx4XhJcj0=\", false, function () {\n  return [useFrame];\n});\n\n_c = ObjectListMirror;\nexport function ObjectListCenter(_ref2) {\n  _s3();\n\n  var randomObject = _ref2.randomObject;\n  var group = useRef();\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 90) / 5;\n    group.current.rotation.x = Math.cos(t) / 70;\n    group.current.rotation.y = Math.sin(t / 90) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  }); // console.log('renderCenter');\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(ObjectListCenter, \"wIQ0TzBcBbrr+qLtNjBx4XhJcj0=\", false, function () {\n  return [useFrame];\n});\n\n_c2 = ObjectListCenter;\nexport function ObjectListRight(_ref3) {\n  _s4();\n\n  var randomObject = _ref3.randomObject;\n  var group = useRef(); // console.log('renderRight');\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(ObjectListRight, \"V23LSP3N666BQdQWUG/Fl5O3fL0=\");\n\n_c3 = ObjectListRight;\nexport function ObjectListLeft(_ref4) {\n  _s5();\n\n  var randomObject = _ref4.randomObject;\n  var group = useRef(); // console.log('renderLeft');\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(ObjectListLeft, \"V23LSP3N666BQdQWUG/Fl5O3fL0=\");\n\n_c4 = ObjectListLeft;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ObjectListMirror\");\n$RefreshReg$(_c2, \"ObjectListCenter\");\n$RefreshReg$(_c3, \"ObjectListRight\");\n$RefreshReg$(_c4, \"ObjectListLeft\");","map":{"version":3,"sources":["/Users/jonathanreis/Projects/BareGenerator/components/models.js"],"names":["THREE","centerObjects","leftObjects","mirrorObjects","rightObjects","React","Suspense","useState","useRef","Canvas","useFrame","createPortal","useGLTF","Stage","Sky","Stars","useFBO","OrbitControls","rotation","PerspectiveCamera","CameraShake","ContactShadows","chooseAndHydrateObject","objects","randomIndex","Math","floor","random","length","randomObject","materialName","pathname","position","scale","scene","nodes","materials","material","geometry","console","log","ObjectListMirror","group","state","t","clock","getElapsedTime","current","z","sin","x","cos","y","ObjectListCenter","ObjectListRight","ObjectListLeft"],"mappings":"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","sourcesContent":["import * as THREE from 'three'\nimport { centerObjects, leftObjects, mirrorObjects, rightObjects } from './rawModels';\nimport React, {  Suspense, useState, useRef } from 'react'\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber'\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei'\n\n/**\n * 1. Choose a random object from the input objects\n * 2. Hydrate the object with scene, nodes, and materials via useGLFT\n * 3. Return the plain object combined with the hydrated fields\n */\nconst chooseAndHydrateObject = (objects) => {\n  const randomIndex = Math.floor(Math.random() * objects.length);\n  const randomObject = objects[randomIndex];\n  const {materialName, pathname, position, rotation, scale} = randomObject;\n  const { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`)\n\n  const material = materials[materialName];\n  const geometry = nodes[pathname].geometry;\n\n  console.log(pathname);\n\n  return {\n    geometry,\n    material,\n    position,\n    rotation,\n    scale,\n    scene\n  }\n}\n\nexport function ObjectListMirror({ randomObject }) {\n  const group = useRef()\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    const t = state.clock.getElapsedTime()\n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 12) / 5\n    group.current.rotation.x = Math.cos(t) / 9\n    group.current.rotation.y = Math.sin(t / 12) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  // console.log('renderMirror');\n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  )\n}\n\nexport function ObjectListCenter({ randomObject }) {\n  const group = useRef()\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    const t = state.clock.getElapsedTime()\n    \n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 90) / 5\n    group.current.rotation.x = Math.cos(t) / 70\n    group.current.rotation.y = Math.sin(t / 90) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  // console.log('renderCenter');\n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  )\n}\n\nexport function ObjectListRight({ randomObject }) {  \n  const group = useRef()\n\n  // console.log('renderRight');\n  \n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  );\n}\n\nexport function ObjectListLeft({ randomObject }) {\n  const group = useRef()\n\n  // console.log('renderLeft');\n\n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  )\n}"]},"metadata":{},"sourceType":"module"}