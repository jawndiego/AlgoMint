{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonathanreis/Projects/BareGenerator/components/frontart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as THREE from 'three';\nimport Roboto from '../fonts/Roboto.json';\nimport { centerObjects, leftObjects, mirrorObjects, rightObjects } from './data/modelData';\nimport React, { Suspense, useState, useRef } from 'react';\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber';\nimport { useGLTF, Stage, Sky, useFBO, OrbitControls, PerspectiveCamera } from '@react-three/drei'; // import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nimport { CenterModel, MirrorModel, StaticModel } from './models';\nconst [centerObjectRaw, leftObjectRaw, mirrorObjectRaw, rightObjectRaw] = [centerObjects, leftObjects, mirrorObjects, rightObjects].map(objectList => {\n  const chooseObject = objects => {\n    const randomIndex = Math.floor(Math.random() * objects.length);\n    return objects[randomIndex];\n  };\n\n  const object = chooseObject(objectList);\n  console.log(objectList.pathname);\n  useGLTF.preload(`./about-pictures/${objectList.pathname}.glb`);\n  return object;\n});\n\nconst hydrateObject = object => {\n  const {\n    materialName,\n    pathname,\n    position,\n    rotation,\n    scale\n  } = object;\n  const {\n    scene,\n    nodes,\n    materials\n  } = useGLTF(`./about-pictures/${pathname}.glb`);\n  const material = materials[materialName];\n  const geometry = nodes[pathname].geometry;\n  return {\n    geometry,\n    material,\n    position,\n    rotation,\n    scale,\n    scene\n  };\n};\n\nfunction MagicMirror(_ref) {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const cam = useRef(); // useFBO creates a WebGL2 buffer for us, it's a helper from the \"drei\" library\n\n  const fbo = useFBO(); // The is a separate scene that we create, React will portal into that\n\n  const {\n    0: scene\n  } = useState(() => new THREE.Scene()); // Tie this component into the render-loop\n\n  useFrame(state => {\n    // Our portal has its own camera, but we copy the originals world matrix\n    cam.current.matrixWorldInverse.copy(state.camera.matrixWorldInverse); // Then we set the render-target to the buffer that we have created\n\n    state.gl.setRenderTarget(fbo); // We render the scene into it, using the local camera that is clamped to the planes aspect ratio\n\n    state.gl.render(scene, cam.current); // And flip the render-target to the default again\n\n    state.gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, props), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [5, 10],\n        position: [0, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        map: fbo.texture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n      manual: true,\n      ref: cam,\n      fov: 150,\n      aspect: 2.5 / 5,\n      onUpdate: c => c.updateProjectionMatrix()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), createPortal(children, scene)]\n  }, void 0, true);\n}\n\nfunction Lights() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: ['#f0f0f0']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 3,\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      intensity: 60,\n      position: [2, 30, 10],\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      intensity: 6,\n      position: [3, 1, 10],\n      color: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      intensity: 3,\n      position: [3, 10, 30],\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nfunction LoadingText() {\n  const textOptions = {\n    font: new THREE.FontLoader().parse(Roboto),\n    size: 0.5,\n    height: 0.2\n  };\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textGeometry\", {\n      attach: \"geometry\",\n      args: ['loading...', textOptions]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\nconst Models = () => {\n  const [centerObject, leftObject, mirrorObject, rightObject] = [centerObjectRaw, leftObjectRaw, mirrorObjectRaw, rightObjectRaw].map(hydrateObject);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MagicMirror, {\n      position: [-13, 3.5, 0],\n      rotation: [0, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(Lights, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sky, {\n        sunPosition: [10000, 10, 10000]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MirrorModel, {\n        object: mirrorObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StaticModel, {\n      object: rightObject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StaticModel, {\n      object: leftObject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CenterModel, {\n      object: centerObject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport function FrontArt() {\n  const controls = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"front-page_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      dpr: (1, 2),\n      camera: {\n        position: [0, 4, 8],\n        fov: 50\n      },\n      gl: {\n        alpha: false\n      },\n      children: [/*#__PURE__*/_jsxDEV(Lights, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(LoadingText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 27\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Stage, {\n          controls: controls,\n          children: /*#__PURE__*/_jsxDEV(Models, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        ref: controls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\nexport default FrontArt;","map":{"version":3,"sources":["/Users/jonathanreis/Projects/BareGenerator/components/frontart.js"],"names":["THREE","Roboto","centerObjects","leftObjects","mirrorObjects","rightObjects","React","Suspense","useState","useRef","Canvas","useFrame","createPortal","useGLTF","Stage","Sky","useFBO","OrbitControls","PerspectiveCamera","CenterModel","MirrorModel","StaticModel","centerObjectRaw","leftObjectRaw","mirrorObjectRaw","rightObjectRaw","map","objectList","chooseObject","objects","randomIndex","Math","floor","random","length","object","console","log","pathname","preload","hydrateObject","materialName","position","rotation","scale","scene","nodes","materials","material","geometry","MagicMirror","children","props","cam","fbo","Scene","state","current","matrixWorldInverse","copy","camera","gl","setRenderTarget","render","texture","c","updateProjectionMatrix","Lights","LoadingText","textOptions","font","FontLoader","parse","size","height","Models","centerObject","leftObject","mirrorObject","rightObject","FrontArt","controls","fov","alpha"],"mappings":"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","sourcesContent":["import * as THREE from 'three'\nimport Roboto from '../fonts/Roboto.json';\nimport { centerObjects, leftObjects, mirrorObjects, rightObjects } from './data/modelData';\nimport React, {  Suspense, useState, useRef } from 'react'\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber'\nimport { useGLTF, Stage, Sky, useFBO, OrbitControls, PerspectiveCamera } from '@react-three/drei'\n// import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport {CenterModel, MirrorModel, StaticModel} from './models'\n\nconst [ centerObjectRaw, leftObjectRaw, mirrorObjectRaw, rightObjectRaw ]\n  = [centerObjects, leftObjects, mirrorObjects, rightObjects].map(objectList => {\n  const chooseObject = (objects) => {\n    const randomIndex = Math.floor(Math.random() * objects.length);\n    return objects[randomIndex];\n  }\n\n  const object = chooseObject(objectList);\n  console.log(objectList.pathname);\n  useGLTF.preload(`./about-pictures/${objectList.pathname}.glb`)\n  return object;\n})\n\nconst hydrateObject = (object) => {\n  const {materialName, pathname, position, rotation, scale} = object;\n  const { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`)\n\n  const material = materials[materialName];\n  const geometry = nodes[pathname].geometry;\n\n  return {\n    geometry,\n    material,\n    position,\n    rotation,\n    scale,\n    scene\n  }\n}\n\nfunction MagicMirror({ children, ...props }) {\n  const cam = useRef()\n  // useFBO creates a WebGL2 buffer for us, it's a helper from the \"drei\" library\n  const fbo = useFBO()\n  // The is a separate scene that we create, React will portal into that\n  const [scene] = useState(() => new THREE.Scene())\n  // Tie this component into the render-loop\n  useFrame((state) => {\n    // Our portal has its own camera, but we copy the originals world matrix\n    cam.current.matrixWorldInverse.copy(state.camera.matrixWorldInverse)\n    // Then we set the render-target to the buffer that we have created\n    state.gl.setRenderTarget(fbo)\n    // We render the scene into it, using the local camera that is clamped to the planes aspect ratio\n    state.gl.render(scene, cam.current)\n    // And flip the render-target to the default again\n    state.gl.setRenderTarget(null)\n  })\n  return (\n    <>\n      <mesh {...props}>\n        <planeGeometry args={[5, 10]} position={[0,10,10]} />\n        {/* The \"mirror\" is just a boring plane, but it receives the buffer texture */}\n        <meshBasicMaterial map={fbo.texture} />\n      </mesh>\n      <PerspectiveCamera manual ref={cam} fov={150} aspect={2.5 / 5} onUpdate={(c) => c.updateProjectionMatrix()} />\n      {/* This is React being awesome, we portal this components children into the separate scene above */}\n      {createPortal(children, scene)}\n    </>\n  )\n}\n\nfunction Lights() {\n  return (\n    <>\n      <color attach=\"background\" args={['#f0f0f0']} />\n      <ambientLight intensity={3} color=\"red\" />\n      <pointLight intensity={60} position={[2, 30, 10]} color=\"red\" />\n      <pointLight intensity={6} position={[3, 1, 10]} color=\"blue\" />\n      <pointLight intensity={3} position={[3, 10, 30]} color=\"red\" />\n    </>\n  )\n}\n\nfunction LoadingText() {\n  const textOptions = {\n    font: new THREE.FontLoader().parse(Roboto),\n    size: 0.5,\n    height: 0.2\n  };\n\n  return (\n    <mesh>\n      <textGeometry attach='geometry' args={['loading...', textOptions]} />\n      <meshStandardMaterial attach='material' />\n    </mesh>\n  );\n}\n\nconst Models = () => {\n  const [ centerObject, leftObject, mirrorObject, rightObject ]\n    = [centerObjectRaw, leftObjectRaw, mirrorObjectRaw, rightObjectRaw].map(hydrateObject);\n\n  return (\n    <>\n      <MagicMirror position={[-13, 3.5, 0]} rotation={[0, 0, 0]}>\n        <Lights />\n        <Sky sunPosition={[10000, 10, 10000]} />\n        <MirrorModel object={mirrorObject} />\n      </MagicMirror>\n      <StaticModel object={rightObject} />\n      <StaticModel object={leftObject} />\n      <CenterModel object={centerObject} />\n    </>\n  )\n}\n\nexport function FrontArt() {\n  const controls = useRef()\n  \n  return (\n    <div className=\"front-page_wrapper\">\n    <Canvas dpr={(1,2)} camera={{ position: [0, 4, 8], fov: 50 }} gl={{ alpha: false }}>\n      <Lights />\n      <Suspense fallback={<LoadingText />}>\n        <Stage controls={controls}>\n          <Models />\n        </Stage>\n      </Suspense>\n      <OrbitControls ref={controls} />\n    </Canvas>\n    </div>\n  )\n}\n\nexport default FrontArt"]},"metadata":{},"sourceType":"module"}