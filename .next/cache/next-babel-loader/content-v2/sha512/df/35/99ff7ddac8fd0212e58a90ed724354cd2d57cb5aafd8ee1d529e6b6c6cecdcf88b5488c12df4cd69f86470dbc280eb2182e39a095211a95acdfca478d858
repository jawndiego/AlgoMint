{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonathanreis/Projects/BareGenerator/components/models.js\";\nimport React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nexport function ObjectListMirror({\n  randomObject\n}) {\n  const group = useRef();\n  useFrame(state => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    const t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 12) / 5;\n    group.current.rotation.x = Math.cos(t) / 9;\n    group.current.rotation.y = Math.sin(t / 12) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  });\n  console.log('renderMirror');\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\nexport function ObjectListCenter({\n  randomObject\n}) {\n  const group = useRef();\n  useFrame(state => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    const t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 90) / 5;\n    group.current.rotation.x = Math.cos(t) / 70;\n    group.current.rotation.y = Math.sin(t / 90) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  });\n  console.log('renderCenter');\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\nexport function ObjectListRight({\n  randomObject\n}) {\n  const group = useRef();\n  console.log('renderRight');\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\nexport function ObjectListLeft({\n  randomObject\n}) {\n  const group = useRef();\n  console.log('renderLeft');\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/jonathanreis/Projects/BareGenerator/components/models.js"],"names":["React","useRef","useFrame","ObjectListMirror","randomObject","group","state","t","clock","getElapsedTime","current","rotation","z","Math","sin","x","cos","y","position","console","log","scale","scene","geometry","material","ObjectListCenter","ObjectListRight","ObjectListLeft"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\nexport function ObjectListMirror({ randomObject }) {\n  const group = useRef()\n  \n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    const t = state.clock.getElapsedTime()\n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 12) / 5\n    group.current.rotation.x = Math.cos(t) / 9\n    group.current.rotation.y = Math.sin(t / 12) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  console.log('renderMirror');\n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  )\n}\n\nexport function ObjectListCenter({ randomObject }) {\n  const group = useRef()\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    const t = state.clock.getElapsedTime()\n    \n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 90) / 5\n    group.current.rotation.x = Math.cos(t) / 70\n    group.current.rotation.y = Math.sin(t / 90) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  console.log('renderCenter');\n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  )\n}\n\nexport function ObjectListRight({ randomObject }) {  \n  const group = useRef()\n\n  console.log('renderRight');\n  \n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  );\n}\n\nexport function ObjectListLeft({ randomObject }) {\n  const group = useRef()\n\n  console.log('renderLeft');\n\n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  )\n}"]},"metadata":{},"sourceType":"module"}