{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonathanreis/Projects/BareGenerator/components/models.js\";\nimport React, { useRef } from 'react';\nimport { useFrame } from '@react-three/fiber';\nexport function MirrorModel({\n  object\n}) {\n  const group = useRef();\n  useFrame(state => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    const t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 12) / 5;\n    group.current.rotation.x = Math.cos(t) / 9;\n    group.current.rotation.y = Math.sin(t / 12) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  });\n  return /*#__PURE__*/_jsxDEV(StaticModel, {\n    object: object,\n    group: group\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\nexport function CenterModel({\n  object\n}) {\n  const group = useRef();\n  useFrame(state => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    const t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 90) / 5;\n    group.current.rotation.x = Math.cos(t) / 70;\n    group.current.rotation.y = Math.sin(t / 90) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  });\n  return /*#__PURE__*/_jsxDEV(StaticModel, {\n    object: object,\n    group: group\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\nexport function StaticModel({\n  object,\n  group\n}) {\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: object.rotation,\n      scale: object.scale,\n      position: object.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: object.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: object.geometry,\n        material: object.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n;","map":{"version":3,"sources":["/Users/jonathanreis/Projects/BareGenerator/components/models.js"],"names":["React","useRef","useFrame","MirrorModel","object","group","state","t","clock","getElapsedTime","current","rotation","z","Math","sin","x","cos","y","position","CenterModel","StaticModel","scale","scene","geometry","material"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\nexport function MirrorModel({ object }) {\n  const group = useRef()\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    const t = state.clock.getElapsedTime()\n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 12) / 5\n    group.current.rotation.x = Math.cos(t) / 9\n    group.current.rotation.y = Math.sin(t / 12) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  return <StaticModel object={object} group={group} />;\n}\n\nexport function CenterModel({ object }) {\n  const group = useRef()\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    const t = state.clock.getElapsedTime()\n    \n    // Make it float\n    group.current.rotation.z = Math.sin(t / 90) / 5\n    group.current.rotation.x = Math.cos(t) / 70\n    group.current.rotation.y = Math.sin(t / 90) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  return <StaticModel object={object} group={group} />;\n}\n\nexport function StaticModel({ object, group }) {  \n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={object.rotation} scale={object.scale} position={object.position} >\n        <mesh object={object.scene}  \n          castShadow\n          receiveShadow\n          geometry={object.geometry}\n          material={object.material} />\n      </group>\n    </group>\n  );\n};"]},"metadata":{},"sourceType":"module"}