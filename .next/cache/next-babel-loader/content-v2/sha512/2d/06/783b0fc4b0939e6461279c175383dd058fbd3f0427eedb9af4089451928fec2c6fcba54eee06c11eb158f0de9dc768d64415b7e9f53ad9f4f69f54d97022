{"ast":null,"code":"import _defineProperty from \"/Users/jonathanreis/Projects/BareGenerator/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathanreis/Projects/BareGenerator/components/models.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as THREE from 'three';\nimport React, { Suspense, useState, useRef } from 'react';\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber';\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei'; // NEW FORMAT CODE GENERATOR \n//MIRRORCHAR\n\nvar chooseRandomObject = function chooseRandomObject(objects) {// const randomIndex = Math.floor(Math.random() * objects.length);\n  // let randomObject = objects[randomIndex];\n  // let {pathname, materialName} = randomObject;\n  // const { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`)\n  // const material = materials[materialName];\n  // const geometry = nodes[pathname].geometry;\n  // console.log(pathname)\n  // return {\n  //   geometry,\n  //   material,\n  //   position,\n  //   rotation,\n  //   scale,\n  //   scene\n  // }\n};\n\nexport function ObjectListMirror(props) {\n  _s();\n\n  //objectsMirror\n  var objects = [{\n    name: 'angel',\n    pathname: 'angel',\n    materialName: 'Cactus',\n    position: [-1.9, 9, 8],\n    scale: [22, 22, 22],\n    rotation: [2, 0, .49]\n  }, {\n    name: 'heem',\n    pathname: 'heem',\n    materialName: 'Cactus',\n    position: [-4.1, 6, 7],\n    scale: [13, 13, 13],\n    rotation: [0, -2.2, 0]\n  }, {\n    name: 'boxer',\n    pathname: 'boxer',\n    materialName: 'Cactus',\n    position: [-5, -6, 8],\n    scale: [26, 26, 26],\n    rotation: [0, -4, 0]\n  }];\n  var randomIndex = Math.floor(Math.random() * objects.length);\n  var randomObject = objects[randomIndex];\n  var pathname = randomObject.pathname,\n      materialName = randomObject.materialName;\n  var group = useRef();\n\n  var _useGLTF = useGLTF(\"./about-pictures/\".concat(pathname, \".glb\")),\n      scene = _useGLTF.scene,\n      nodes = _useGLTF.nodes,\n      materials = _useGLTF.materials;\n\n  console.log(pathname);\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    // Rotate \n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 12) / 5;\n    group.current.rotation.x = Math.cos(t) / 9;\n    group.current.rotation.y = Math.sin(t / 12) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n        object: scene\n      }, props), {}, {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes[pathname].geometry,\n        material: materials[materialName]\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n} //Center character \n\n_s(ObjectListMirror, \"YamCTjXD3vDnghrwNO0/Vddj8I8=\", false, function () {\n  return [useGLTF, useFrame];\n});\n\n_c = ObjectListMirror;\nexport function ObjectListCenter(props) {\n  _s2();\n\n  //objects center \n  var objects = [{\n    name: 'plant',\n    pathname: 'planta',\n    materialName: 'Cactus',\n    position: [-12.5, 3.75, 6],\n    scale: [4.2, 4.2, 4.2],\n    rotation: [1.8, 0, 0.55]\n  }, {\n    name: 'nopal001',\n    pathname: 'nopal001',\n    materialName: 'Cactus',\n    position: [-14.5, 0, 6],\n    scale: [.16, .16, .16],\n    rotation: [0, 3, 0.55]\n  }, {\n    name: 'boxcactus',\n    pathname: 'boxcactus',\n    materialName: 'boxcactus',\n    position: [-12.5, 5, 6],\n    scale: [8, 8, 8],\n    rotation: [0, 0, 0]\n  }, {\n    name: 'bigflower',\n    pathname: 'bigflower001',\n    materialName: 'BoxCactus.002',\n    position: [-12, 3, 6],\n    scale: [6, 6, 6],\n    rotation: [1.8, .3, .4]\n  }, {\n    name: 'one1',\n    pathname: 'one1',\n    materialName: 'StandardFF3300',\n    position: [-12, 3, 6],\n    scale: [6, 6, 6],\n    rotation: [0.92, 0, 0.28]\n  }, {\n    name: 'snake',\n    pathname: 'snake',\n    materialName: 'colorchart',\n    position: [-12, -3, 6],\n    scale: [6, 6, 6],\n    rotation: [1.9, 0, 0]\n  }];\n  var randomIndex = Math.floor(Math.random() * objects.length);\n  var randomObject = objects[randomIndex];\n  var name = randomObject.name,\n      pathname = randomObject.pathname,\n      materialName = randomObject.materialName,\n      position = randomObject.position,\n      scale = randomObject.scale,\n      rotation = randomObject.rotation;\n  var group = useRef();\n\n  var _useGLTF2 = useGLTF(\"./about-pictures/\".concat(pathname, \".glb\")),\n      scene = _useGLTF2.scene,\n      nodes = _useGLTF2.nodes,\n      materials = _useGLTF2.materials;\n\n  console.log(pathname);\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    // Rotate \n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 90) / 5;\n    group.current.rotation.x = Math.cos(t) / 70;\n    group.current.rotation.y = Math.sin(t / 90) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n        object: scene\n      }, props), {}, {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes[pathname].geometry,\n        material: materials[materialName]\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n} //RIGHTSIDE\n\n_s2(ObjectListCenter, \"YamCTjXD3vDnghrwNO0/Vddj8I8=\", false, function () {\n  return [useGLTF, useFrame];\n});\n\n_c2 = ObjectListCenter;\nexport function ObjectListRight(props) {\n  _s3();\n\n  //objectsright \n  var objects = [{\n    name: 'dunkin',\n    pathname: 'dunkin',\n    materialName: 'dunkin',\n    position: [-10.5, .29, 3],\n    scale: [.2, .2, .2],\n    rotation: [8.1, 7.8, 17.1]\n  }, {\n    name: 'beer',\n    pathname: '14043_16_oz_Beer_Bottle_v2_L1',\n    materialName: 'Material__4',\n    position: [-10.5, 0, 3],\n    scale: [.36, .36, .36],\n    rotation: [.03, .59, 0]\n  }, {\n    name: 'yakult',\n    pathname: '04_cap_Circle003',\n    materialName: 'Yakult',\n    position: [-10.5, 0, 3],\n    scale: [30, 30, 30],\n    rotation: [.03, .59, 0]\n  }];\n  var randomIndex = Math.floor(Math.random() * objects.length);\n  var randomObject = objects[randomIndex];\n  var name = randomObject.name,\n      pathname = randomObject.pathname,\n      materialName = randomObject.materialName,\n      position = randomObject.position,\n      scale = randomObject.scale,\n      rotation = randomObject.rotation;\n  var group = useRef();\n\n  var _useGLTF3 = useGLTF(\"./about-pictures/\".concat(pathname, \".glb\")),\n      scene = _useGLTF3.scene,\n      nodes = _useGLTF3.nodes,\n      materials = _useGLTF3.materials;\n\n  console.log(pathname);\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n        object: scene\n      }, props), {}, {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes[pathname].geometry,\n        material: materials[materialName]\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n} //LEFTSIDE\n\n_s3(ObjectListRight, \"sfvsFy1o/B/JWVVPp6Ny2ObmGjs=\", false, function () {\n  return [useGLTF];\n});\n\n_c3 = ObjectListRight;\nexport function ObjectListLeft(props) {\n  _s4();\n\n  //objectsleft objectsright, objectsmiddle objectsmirror \n  var objects = [{\n    name: 'concha',\n    pathname: 'PAN_CONCHA001',\n    materialName: 'Default OBJ.001',\n    position: [-15, .29, 3],\n    scale: [.36, .36, .36],\n    rotation: [2, 0, 0]\n  }, {\n    name: 'tortilla',\n    pathname: 'TORTILLA_PLATE_OBJ001',\n    materialName: 'tortilla',\n    position: [-15, 1.5, 3],\n    scale: [.25, .25, .25],\n    rotation: [.03, .59, 0]\n  }, {\n    name: 'obj0',\n    pathname: 'obj0',\n    materialName: '_Gun_GWdefault',\n    position: [-15, .8, 3],\n    scale: [.6, .6, .6],\n    rotation: [0, 2.4, 1.75]\n  }, {\n    name: 'pitaya',\n    pathname: 'Cactus_Fig_04',\n    materialName: 'Cactus_Fig_04_Material',\n    position: [-15, 1.5, 3],\n    scale: [.36, .36, .36],\n    rotation: [.5, .5, 3]\n  }];\n  var randomIndex = Math.floor(Math.random() * objects.length);\n  var randomObject = objects[randomIndex];\n  var name = randomObject.name,\n      pathname = randomObject.pathname,\n      materialName = randomObject.materialName,\n      position = randomObject.position,\n      scale = randomObject.scale,\n      rotation = randomObject.rotation;\n  var group = useRef();\n\n  var _useGLTF4 = useGLTF(\"./about-pictures/\".concat(pathname, \".glb\")),\n      scene = _useGLTF4.scene,\n      nodes = _useGLTF4.nodes,\n      materials = _useGLTF4.materials;\n\n  console.log(pathname);\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n        object: scene\n      }, props), {}, {\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes[pathname].geometry,\n        material: materials[materialName]\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 3\n  }, this);\n} // Models \n\n_s4(ObjectListLeft, \"sfvsFy1o/B/JWVVPp6Ny2ObmGjs=\", false, function () {\n  return [useGLTF];\n});\n\n_c4 = ObjectListLeft;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ObjectListMirror\");\n$RefreshReg$(_c2, \"ObjectListCenter\");\n$RefreshReg$(_c3, \"ObjectListRight\");\n$RefreshReg$(_c4, \"ObjectListLeft\");","map":{"version":3,"sources":["/Users/jonathanreis/Projects/BareGenerator/components/models.js"],"names":["THREE","React","Suspense","useState","useRef","Canvas","useFrame","createPortal","useGLTF","Stage","Sky","Stars","useFBO","OrbitControls","rotation","PerspectiveCamera","CameraShake","ContactShadows","chooseRandomObject","objects","ObjectListMirror","props","name","pathname","materialName","position","scale","randomIndex","Math","floor","random","length","randomObject","group","scene","nodes","materials","console","log","state","t","clock","getElapsedTime","current","z","sin","x","cos","y","geometry","ObjectListCenter","ObjectListRight","ObjectListLeft"],"mappings":"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","sourcesContent":["import * as THREE from 'three'\nimport React, {  Suspense, useState, useRef } from 'react'\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber'\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei'\n\n\n// NEW FORMAT CODE GENERATOR \n//MIRRORCHAR\n\nconst chooseRandomObject = (objects) => {\n  // const randomIndex = Math.floor(Math.random() * objects.length);\n  // let randomObject = objects[randomIndex];\n  // let {pathname, materialName} = randomObject;\n  // const { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`)\n\n  // const material = materials[materialName];\n  // const geometry = nodes[pathname].geometry;\n\n  // console.log(pathname)\n\n  // return {\n  //   geometry,\n  //   material,\n  //   position,\n  //   rotation,\n  //   scale,\n  //   scene\n  // }\n}\n\nexport function ObjectListMirror(props) {\n  //objectsMirror\n  const objects = [\n    {\n      name: 'angel',\n      pathname: 'angel',\n      materialName: 'Cactus',\n      position: [-1.9, 9, 8],\n      scale: [22, 22, 22],\n      rotation: [2, 0, .49]\n    },\n    {\n      name: 'heem',\n      pathname: 'heem',\n      materialName: 'Cactus',\n      position: [-4.1, 6, 7],\n      scale: [13, 13, 13],\n      rotation: [0, -2.2, 0]\n    },\n    {\n      name: 'boxer',\n      pathname: 'boxer',\n      materialName: 'Cactus',\n      position: [-5, -6, 8],\n      scale: [26, 26, 26],\n      rotation: [0, -4, 0],\n\n    }\n  ]\n  \n  const randomIndex = Math.floor(Math.random() * objects.length);\n  let randomObject = objects[randomIndex];\n  let {pathname, materialName} = randomObject;\n  \n  const group = useRef()\n  const { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`)\n\n  console.log(pathname)\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    // Rotate \n    const t = state.clock.getElapsedTime()\n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 12) / 5\n    group.current.rotation.x = Math.cos(t) / 9\n    group.current.rotation.y = Math.sin(t / 12) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  return (\n    <group ref={group} {...props} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={scene} {...props}  \n            castShadow\n            receiveShadow\n            geometry={nodes[pathname].geometry}\n            material={materials[materialName]} />\n      </group>\n    </group>\n  )\n  }\n\n//Center character \n\nexport function ObjectListCenter(props) {\n\n  //objects center \n  \n  const objects = [\n    {\n      name: 'plant',\n      pathname: 'planta',\n      materialName: 'Cactus',\n      position: [-12.5, 3.75, 6],\n      scale: [4.2, 4.2, 4.2],\n      rotation: [1.8, 0, 0.55]\n    \n      \n    },\n    {\n      name: 'nopal001',\n      pathname: 'nopal001',\n      materialName: 'Cactus',\n      position: [-14.5, 0, 6],\n      scale: [.16, .16, .16],\n      rotation: [0, 3, 0.55]\n      \n    },\n    {\n      name: 'boxcactus',\n      pathname: 'boxcactus',\n      materialName: 'boxcactus',\n      position: [-12.5, 5, 6],\n      scale: [8, 8, 8],\n      rotation: [0, 0, 0]\n      \n    },\n    {\n      name: 'bigflower',\n      pathname: 'bigflower001',\n      materialName: 'BoxCactus.002',\n      position: [-12, 3, 6],\n      scale: [6, 6, 6],\n      rotation: [1.8, .3, .4],\n      \n    },\n    {\n      name: 'one1',\n      pathname: 'one1',\n      materialName: 'StandardFF3300',\n      position: [-12, 3, 6],\n      scale: [6, 6, 6],\n      rotation: [0.92, 0, 0.28],\n      \n    },\n    {\n      name: 'snake',\n      pathname: 'snake',\n      materialName: 'colorchart',\n      position: [-12, -3, 6],\n      scale: [6, 6, 6],\n      rotation: [1.9, 0, 0],\n      \n    }\n  ]\n  \n  const randomIndex = Math.floor(Math.random() * objects.length);\n  let randomObject = objects[randomIndex];\n  let { name, pathname, materialName, position, scale, rotation } = randomObject;\n  \n  const group = useRef()\n  const { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`)\n\n  console.log(pathname)\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    // Rotate \n    const t = state.clock.getElapsedTime()\n    \n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 90) / 5\n    group.current.rotation.x = Math.cos(t) / 70\n    group.current.rotation.y = Math.sin(t / 90) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  return (\n  \n    <group ref={group} {...props} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={scene} {...props}  \n            castShadow\n            receiveShadow\n            geometry={nodes[pathname].geometry}\n            material={materials[materialName]} />\n      </group>\n    </group>\n  )\n  }\n\n//RIGHTSIDE\n\nexport function ObjectListRight(props) {\n\n  //objectsright \n  \n  const objects = [\n    {\n      name: 'dunkin',\n      pathname: 'dunkin',\n      materialName: 'dunkin',\n      position: [-10.5, .29, 3],\n      scale: [.2, .2, .2],\n      rotation: [8.1, 7.8, 17.1]\n    },\n  \n    {\n      name: 'beer',\n      pathname: '14043_16_oz_Beer_Bottle_v2_L1',\n      materialName: 'Material__4',\n      position: [-10.5, 0, 3],\n      scale: [.36, .36, .36],\n      rotation: [.03, .59, 0],\n    \n    }, \n    {\n      name: 'yakult',\n      pathname: '04_cap_Circle003',\n      materialName: 'Yakult',\n      position: [-10.5, 0, 3],\n      scale: [30, 30, 30],\n      rotation: [.03, .59, 0],\n    \n    }\n  ]\n  \n  const randomIndex = Math.floor(Math.random() * objects.length);\n  let randomObject = objects[randomIndex];\n  let { name, pathname, materialName, position, scale, rotation } = randomObject;\n  \n  const group = useRef()\n  const { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`);\n  console.log(pathname)\n  \n  return (\n  \n    <group ref={group} {...props} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={scene} {...props}  \n            castShadow\n            receiveShadow\n            geometry={nodes[pathname].geometry}\n            material={materials[materialName]} />\n      </group>\n    </group>\n  )\n  }\n\n//LEFTSIDE\n\nexport function ObjectListLeft(props) {\n\n//objectsleft objectsright, objectsmiddle objectsmirror \n\nconst objects = [\n  {\n    name: 'concha',\n    pathname: 'PAN_CONCHA001',\n    materialName: 'Default OBJ.001',\n    position: [-15, .29, 3],\n    scale: [.36, .36, .36],\n    rotation: [2, 0, 0]\n  },\n  {\n    name: 'tortilla',\n    pathname: 'TORTILLA_PLATE_OBJ001',\n    materialName: 'tortilla',\n    position: [-15, 1.5, 3],\n    scale: [.25, .25, .25],\n    rotation: [.03, .59, 0]\n  \n  },\n  {\n    name: 'obj0',\n    pathname: 'obj0',\n    materialName: '_Gun_GWdefault',\n    position: [-15, .8, 3],\n    scale: [.6, .6, .6],\n    rotation: [0, 2.4, 1.75]\n  \n  },\n  {\n    name: 'pitaya',\n    pathname: 'Cactus_Fig_04',\n    materialName: 'Cactus_Fig_04_Material',\n    position: [-15, 1.5, 3],\n    scale: [.36, .36, .36],\n    rotation: [.5, .5, 3]\n  \n  }\n]\n\nconst randomIndex = Math.floor(Math.random() * objects.length);\nlet randomObject = objects[randomIndex];\nlet { name, pathname, materialName, position, scale, rotation } = randomObject;\n\nconst group = useRef()\nconst { scene, nodes, materials } = useGLTF(`./about-pictures/${pathname}.glb`);\nconsole.log(pathname)\n\nreturn (\n\n  <group ref={group} {...props} dispose={null} >\n    <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n      <mesh object={scene} {...props}  \n          castShadow\n          receiveShadow\n          geometry={nodes[pathname].geometry}\n          material={materials[materialName]} />\n    </group>\n  </group>\n)\n}\n\n// Models \n"]},"metadata":{},"sourceType":"module"}