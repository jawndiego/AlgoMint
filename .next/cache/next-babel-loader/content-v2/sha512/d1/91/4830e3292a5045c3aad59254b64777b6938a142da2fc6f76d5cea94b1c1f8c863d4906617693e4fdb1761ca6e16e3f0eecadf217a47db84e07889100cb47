{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathanreis/Projects/BareGenerator/components/models.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport * as THREE from 'three';\nimport { centerObjects, leftObjects, mirrorObjects, rightObjects } from './rawModels';\nimport React, { Suspense, useState, useRef } from 'react';\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber';\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei';\nexport function ObjectListMirror(_ref) {\n  _s();\n\n  var randomObject = _ref.randomObject;\n  var group = useRef();\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 12) / 5;\n    group.current.rotation.x = Math.cos(t) / 9;\n    group.current.rotation.y = Math.sin(t / 12) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  }); // console.log('renderMirror');\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ObjectListMirror, \"wIQ0TzBcBbrr+qLtNjBx4XhJcj0=\", false, function () {\n  return [useFrame];\n});\n\n_c = ObjectListMirror;\nexport function ObjectListCenter(_ref2) {\n  _s2();\n\n  var randomObject = _ref2.randomObject;\n  var group = useRef();\n  useFrame(function (state) {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n    var t = state.clock.getElapsedTime(); // Make it float\n\n    group.current.rotation.z = Math.sin(t / 90) / 5;\n    group.current.rotation.x = Math.cos(t) / 70;\n    group.current.rotation.y = Math.sin(t / 90) / 5;\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5;\n  }); // console.log('renderCenter');\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ObjectListCenter, \"wIQ0TzBcBbrr+qLtNjBx4XhJcj0=\", false, function () {\n  return [useFrame];\n});\n\n_c2 = ObjectListCenter;\nexport function ObjectListRight(_ref3) {\n  _s3();\n\n  var randomObject = _ref3.randomObject;\n  var group = useRef(); // console.log('renderRight');\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(ObjectListRight, \"V23LSP3N666BQdQWUG/Fl5O3fL0=\");\n\n_c3 = ObjectListRight;\nexport function ObjectListLeft(_ref4) {\n  _s4();\n\n  var randomObject = _ref4.randomObject;\n  var group = useRef(); // console.log('renderLeft');\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: randomObject.rotation,\n      scale: randomObject.scale,\n      position: randomObject.position,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        object: randomObject.scene,\n        castShadow: true,\n        receiveShadow: true,\n        geometry: randomObject.geometry,\n        material: randomObject.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(ObjectListLeft, \"V23LSP3N666BQdQWUG/Fl5O3fL0=\");\n\n_c4 = ObjectListLeft;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ObjectListMirror\");\n$RefreshReg$(_c2, \"ObjectListCenter\");\n$RefreshReg$(_c3, \"ObjectListRight\");\n$RefreshReg$(_c4, \"ObjectListLeft\");","map":{"version":3,"sources":["/Users/jonathanreis/Projects/BareGenerator/components/models.js"],"names":["THREE","centerObjects","leftObjects","mirrorObjects","rightObjects","React","Suspense","useState","useRef","Canvas","useFrame","createPortal","useGLTF","Stage","Sky","Stars","useFBO","OrbitControls","rotation","PerspectiveCamera","CameraShake","ContactShadows","ObjectListMirror","randomObject","group","state","t","clock","getElapsedTime","current","z","Math","sin","x","cos","y","position","scale","scene","geometry","material","ObjectListCenter","ObjectListRight","ObjectListLeft"],"mappings":"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","sourcesContent":["import * as THREE from 'three'\nimport { centerObjects, leftObjects, mirrorObjects, rightObjects } from './rawModels';\nimport React, {  Suspense, useState, useRef } from 'react'\nimport { Canvas, useFrame, createPortal } from '@react-three/fiber'\nimport { useGLTF, Stage, Sky, Stars, useFBO, OrbitControls, rotation, PerspectiveCamera, CameraShake, ContactShadows } from '@react-three/drei'\n\nexport function ObjectListMirror({ randomObject }) {\n  const group = useRef()\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    const t = state.clock.getElapsedTime()\n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 12) / 5\n    group.current.rotation.x = Math.cos(t) / 9\n    group.current.rotation.y = Math.sin(t / 12) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  // console.log('renderMirror');\n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  )\n}\n\nexport function ObjectListCenter({ randomObject }) {\n  const group = useRef()\n\n  useFrame((state) => {\n    // This function runs 60 times/second, it binds this component to the render-loop.\n    // On unmount this subscription is cleaned up automatically.\n\n    const t = state.clock.getElapsedTime()\n    \n\n    // Make it float\n    group.current.rotation.z = Math.sin(t / 90) / 5\n    group.current.rotation.x = Math.cos(t) / 70\n    group.current.rotation.y = Math.sin(t / 90) / 5\n    group.current.position.y = 0.5 + (1 + Math.sin(t / 10)) / 5\n  })\n  \n  // console.log('renderCenter');\n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  )\n}\n\nexport function ObjectListRight({ randomObject }) {  \n  const group = useRef()\n\n  // console.log('renderRight');\n  \n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  );\n}\n\nexport function ObjectListLeft({ randomObject }) {\n  const group = useRef()\n\n  // console.log('renderLeft');\n\n  return (\n    <group ref={group} dispose={null} >\n      <group rotation={randomObject.rotation} scale={randomObject.scale} position={randomObject.position} >\n        <mesh object={randomObject.scene}  \n            castShadow\n            receiveShadow\n            geometry={randomObject.geometry}\n            material={randomObject.material} />\n      </group>\n    </group>\n  )\n}"]},"metadata":{},"sourceType":"module"}